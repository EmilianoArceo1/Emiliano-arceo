
package UI;

import Controler.PuenteDBV;
import DB.UsuariosDb;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emili
 */
public class adminUsuarios extends javax.swing.JFrame {

    private String usuarioN;
    public adminUsuarios(String usuarioNombre) {
        initComponents();
        this.usuarioN = usuarioNombre;
        actualizarTabla();
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                cerrarVentana();
            }
        });

        tblUsuarios.getSelectionModel().addListSelectionListener(e -> llenarCampos());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAñadir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCambiarPermisos = new javax.swing.JButton();
        txtPermisos = new javax.swing.JTextField();
        txtUsuarios = new javax.swing.JTextField();
        btnCambiarUsuarios = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Administrador de Usuarios");

        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Usuario", "Nivel permisos", "Laboratorio"
            }
        ));
        jScrollPane1.setViewportView(tblUsuarios);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCambiarPermisos.setText("Cambiar permisos");
        btnCambiarPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarPermisosActionPerformed(evt);
            }
        });

        btnCambiarUsuarios.setText("Cambiar Usuarios");
        btnCambiarUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarUsuariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCambiarPermisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPermisos)
                                    .addComponent(txtUsuarios)
                                    .addComponent(btnCambiarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(btnEliminar)))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(260, 260, 260))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(txtPermisos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCambiarPermisos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCambiarUsuarios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadir)
                    .addComponent(btnRegresar))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void cerrarVentana() {
        this.setVisible(false);
    }
     
    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        nuevoUsuario nvUs = new nuevoUsuario(usuarioN);
        nvUs.setVisible(true);
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada >= 0) {
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Seguro que desea eliminar el usuario?", "Confirmación", JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(tblUsuarios.getValueAt(filaSeleccionada, 0).toString());
                UsuariosDb.eliminarUsuario(id);
                actualizarTabla();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un usuario para eliminar");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCambiarPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarPermisosActionPerformed
        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada >= 0) {
            int id = Integer.parseInt(tblUsuarios.getValueAt(filaSeleccionada, 0).toString());
            String nuevosPermisos = JOptionPane.showInputDialog("Ingrese los nuevos permisos del usuario:", txtPermisos.getText());

            if (nuevosPermisos != null && !nuevosPermisos.isEmpty()) {
                String tablaSeleccionada = "Usuarios";
                cambiarPermisos(id, nuevosPermisos, tablaSeleccionada);
                actualizarTabla();

                txtUsuarios.setText("");
                txtPermisos.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un usuario para cambiar sus permisos");
        }
    }//GEN-LAST:event_btnCambiarPermisosActionPerformed

    private void btnCambiarUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarUsuariosActionPerformed
         int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada >= 0) {
            int id = Integer.parseInt(tblUsuarios.getValueAt(filaSeleccionada, 0).toString());
            String nuevoUsuario = JOptionPane.showInputDialog("Ingrese el nuevo nombre de usuario:", txtUsuarios.getText());

            if (nuevoUsuario != null && !nuevoUsuario.isEmpty()) {
                String tablaSeleccionada = "Usuarios";
                cambiarUsuario(id, nuevoUsuario, tablaSeleccionada);
                actualizarTabla();

                // Limpia los campos de texto
                txtUsuarios.setText("");
                txtPermisos.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un usuario para cambiar su nombre de usuario");
        }
    }//GEN-LAST:event_btnCambiarUsuariosActionPerformed

    private void eliminarUsuario(int id, String tabla) {
    String sql = "DELETE FROM " + tabla + " WHERE id = ?";

    try (Connection con = DB.conexion.getConexion();
         PreparedStatement ps = con.prepareStatement(sql)) {
        ps.setInt(1, id);
        ps.executeUpdate();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }
}

    private void cambiarUsuario(int id, String nuevoUsuario, String tabla) {
        String sql = "UPDATE " + tabla + " SET usuario = ? WHERE id = ?";

        try (Connection con = DB.conexion.getConexion();
             PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setString(1, nuevoUsuario);
            ps.setInt(2, id);
            ps.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    private void cambiarPermisos(int id, String nuevosPermisos, String tabla) {
        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada >= 0) {
            int idU = Integer.parseInt(tblUsuarios.getValueAt(filaSeleccionada, 0).toString());
            String nuevosPermisosU = JOptionPane.showInputDialog("Ingrese los nuevos permisos del usuario:");

            if (nuevosPermisos != null && !nuevosPermisos.isEmpty()) {
                UsuariosDb.cambiarPermisos(idU, nuevosPermisosU);
                actualizarTabla();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un usuario para cambiar sus permisos");
        }
    }

    
    private void actualizarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tblUsuarios.getModel();
        modeloTabla.setRowCount(0);

        try {
            ResultSet rs = UsuariosDb.obtenerUsuarios();
            while (rs.next()) {
                Object[] fila = {rs.getInt("id"), rs.getString("nombre"), rs.getString("usuario"),
                                 rs.getString("permisos"), rs.getString("laboratorio")};
                modeloTabla.addRow(fila);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void llenarCampos() {
        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada >= 0) {
            txtUsuarios.setText(tblUsuarios.getValueAt(filaSeleccionada, 2).toString());
            txtPermisos.setText(tblUsuarios.getValueAt(filaSeleccionada, 3).toString());
        }
    }
    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminUsuarios(usuarioN).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnCambiarPermisos;
    private javax.swing.JButton btnCambiarUsuarios;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtPermisos;
    private javax.swing.JTextField txtUsuarios;
    // End of variables declaration//GEN-END:variables
}
